// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Jcr.Data
{
    using Jcr.Data;

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.30.0.0")]
    public partial class FakeDBMEdition01Context : IDBMEdition01Context
    {

        public FakeDBMEdition01Context()
        {

            InitializePartial();
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        partial void InitializePartial();

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        public System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        public System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        public System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }


        // Stored Procedures
        public System.Collections.Generic.List<ApiAllChildrenMatchParentReturnModel> ApiAllChildrenMatchParent(int? tracerId)
        {
            int procResult;
            return ApiAllChildrenMatchParent(tracerId, out procResult);
        }

        public System.Collections.Generic.List<ApiAllChildrenMatchParentReturnModel> ApiAllChildrenMatchParent(int? tracerId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiAllChildrenMatchParentReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiAllChildrenMatchParentReturnModel>> ApiAllChildrenMatchParentAsync(int? tracerId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiAllChildrenMatchParent(tracerId, out procResult));
        }

        public System.Collections.Generic.List<ApiChangeMasterSiteReturnModel> ApiChangeMasterSite(int? tracerId, int? siteId, int? userId)
        {
            int procResult;
            return ApiChangeMasterSite(tracerId, siteId, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiChangeMasterSiteReturnModel> ApiChangeMasterSite(int? tracerId, int? siteId, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiChangeMasterSiteReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiChangeMasterSiteReturnModel>> ApiChangeMasterSiteAsync(int? tracerId, int? siteId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiChangeMasterSite(tracerId, siteId, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiCreateGuestUserByEmailIdsReturnModel> ApiCreateGuestUserByEmailIds(string lstUserEmailIDs, int? siteId, string firstName, string lastName, string middleName, int? externalUserRoleTypeId, int? updatedById)
        {
            int procResult;
            return ApiCreateGuestUserByEmailIds(lstUserEmailIDs, siteId, firstName, lastName, middleName, externalUserRoleTypeId, updatedById, out procResult);
        }

        public System.Collections.Generic.List<ApiCreateGuestUserByEmailIdsReturnModel> ApiCreateGuestUserByEmailIds(string lstUserEmailIDs, int? siteId, string firstName, string lastName, string middleName, int? externalUserRoleTypeId, int? updatedById, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiCreateGuestUserByEmailIdsReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiCreateGuestUserByEmailIdsReturnModel>> ApiCreateGuestUserByEmailIdsAsync(string lstUserEmailIDs, int? siteId, string firstName, string lastName, string middleName, int? externalUserRoleTypeId, int? updatedById)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiCreateGuestUserByEmailIds(lstUserEmailIDs, siteId, firstName, lastName, middleName, externalUserRoleTypeId, updatedById, out procResult));
        }

        public int ApiDeleteTask(string taskId)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiDeleteTracerCategoryReturnModel> ApiDeleteTracerCategory(int? tracerCategoryId, int? siteId, int? updatedById, int? newTracerCategoryId)
        {
            int procResult;
            return ApiDeleteTracerCategory(tracerCategoryId, siteId, updatedById, newTracerCategoryId, out procResult);
        }

        public System.Collections.Generic.List<ApiDeleteTracerCategoryReturnModel> ApiDeleteTracerCategory(int? tracerCategoryId, int? siteId, int? updatedById, int? newTracerCategoryId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiDeleteTracerCategoryReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiDeleteTracerCategoryReturnModel>> ApiDeleteTracerCategoryAsync(int? tracerCategoryId, int? siteId, int? updatedById, int? newTracerCategoryId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiDeleteTracerCategory(tracerCategoryId, siteId, updatedById, newTracerCategoryId, out procResult));
        }

        public int ApiDeleteTracerImageByName(int? tracerCustomId, int? tracerQuestionId, int? tracerResponseId, int? userId, string imageName)
        {

            return 0;
        }

        public int ApiDeleteTracerImagesTemp(int? tracerCustomId, int? userId)
        {

            return 0;
        }

        public int ApiDisableTaskNotificationSchedules(int? updateTypeId, int? siteId, int? userId, string taskIDs)
        {

            return 0;
        }

        public int ApiEmailUpdateErReportUserSchedule(int? siteId, bool? sendTaskReport, int? scheduleTypeId, string userTaskRecipients, int? userId, int? updatedUserId, int? taskTypeId)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiGetActiveDeptCountReturnModel> ApiGetActiveDeptCount(int? siteId, int? programId)
        {
            int procResult;
            return ApiGetActiveDeptCount(siteId, programId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetActiveDeptCountReturnModel> ApiGetActiveDeptCount(int? siteId, int? programId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetActiveDeptCountReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetActiveDeptCountReturnModel>> ApiGetActiveDeptCountAsync(int? siteId, int? programId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetActiveDeptCount(siteId, programId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetAmpTaskListByEpTextIdReturnModel> ApiGetAmpTaskListByEpTextId(string standardEffDate, int? siteId, int? programId, int? epTextId)
        {
            int procResult;
            return ApiGetAmpTaskListByEpTextId(standardEffDate, siteId, programId, epTextId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetAmpTaskListByEpTextIdReturnModel> ApiGetAmpTaskListByEpTextId(string standardEffDate, int? siteId, int? programId, int? epTextId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetAmpTaskListByEpTextIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetAmpTaskListByEpTextIdReturnModel>> ApiGetAmpTaskListByEpTextIdAsync(string standardEffDate, int? siteId, int? programId, int? epTextId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetAmpTaskListByEpTextId(standardEffDate, siteId, programId, epTextId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetCategoryNamesReturnModel> ApiGetCategoryNames(int? siteId, int? programId)
        {
            int procResult;
            return ApiGetCategoryNames(siteId, programId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetCategoryNamesReturnModel> ApiGetCategoryNames(int? siteId, int? programId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetCategoryNamesReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetCategoryNamesReturnModel>> ApiGetCategoryNamesAsync(int? siteId, int? programId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetCategoryNames(siteId, programId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetChaptersBySiteAndProgramReturnModel> ApiGetChaptersBySiteAndProgram(int? siteId, int? programId, int? userId, int? certificationItemId, System.DateTime? standardEffBeginDate, int? serviceProfileTypeId)
        {
            int procResult;
            return ApiGetChaptersBySiteAndProgram(siteId, programId, userId, certificationItemId, standardEffBeginDate, serviceProfileTypeId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetChaptersBySiteAndProgramReturnModel> ApiGetChaptersBySiteAndProgram(int? siteId, int? programId, int? userId, int? certificationItemId, System.DateTime? standardEffBeginDate, int? serviceProfileTypeId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetChaptersBySiteAndProgramReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetChaptersBySiteAndProgramReturnModel>> ApiGetChaptersBySiteAndProgramAsync(int? siteId, int? programId, int? userId, int? certificationItemId, System.DateTime? standardEffBeginDate, int? serviceProfileTypeId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetChaptersBySiteAndProgram(siteId, programId, userId, certificationItemId, standardEffBeginDate, serviceProfileTypeId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetChapterStandardByEpTextIdReturnModel> ApiGetChapterStandardByEpTextId(string standardEffBeginDate, int? epTextId, int? programId)
        {
            int procResult;
            return ApiGetChapterStandardByEpTextId(standardEffBeginDate, epTextId, programId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetChapterStandardByEpTextIdReturnModel> ApiGetChapterStandardByEpTextId(string standardEffBeginDate, int? epTextId, int? programId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetChapterStandardByEpTextIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetChapterStandardByEpTextIdReturnModel>> ApiGetChapterStandardByEpTextIdAsync(string standardEffBeginDate, int? epTextId, int? programId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetChapterStandardByEpTextId(standardEffBeginDate, epTextId, programId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetCmsTaskListByCmsStandardIdReturnModel> ApiGetCmsTaskListByCmsStandardId(string standardEffDate, int? siteId, int? programId, int? cmsStandardId)
        {
            int procResult;
            return ApiGetCmsTaskListByCmsStandardId(standardEffDate, siteId, programId, cmsStandardId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetCmsTaskListByCmsStandardIdReturnModel> ApiGetCmsTaskListByCmsStandardId(string standardEffDate, int? siteId, int? programId, int? cmsStandardId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetCmsTaskListByCmsStandardIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetCmsTaskListByCmsStandardIdReturnModel>> ApiGetCmsTaskListByCmsStandardIdAsync(string standardEffDate, int? siteId, int? programId, int? cmsStandardId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetCmsTaskListByCmsStandardId(standardEffDate, siteId, programId, cmsStandardId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetCopDataReturnModel> ApiGetCopData(int? siteId, int? programId)
        {
            int procResult;
            return ApiGetCopData(siteId, programId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetCopDataReturnModel> ApiGetCopData(int? siteId, int? programId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetCopDataReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetCopDataReturnModel>> ApiGetCopDataAsync(int? siteId, int? programId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetCopData(siteId, programId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetCopTagByCmsStandardIdReturnModel> ApiGetCopTagByCmsStandardId(int? programId, int? cmsStandardId)
        {
            int procResult;
            return ApiGetCopTagByCmsStandardId(programId, cmsStandardId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetCopTagByCmsStandardIdReturnModel> ApiGetCopTagByCmsStandardId(int? programId, int? cmsStandardId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetCopTagByCmsStandardIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetCopTagByCmsStandardIdReturnModel>> ApiGetCopTagByCmsStandardIdAsync(int? programId, int? cmsStandardId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetCopTagByCmsStandardId(programId, cmsStandardId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetDepartmentHierarchyByRankIdReturnModel> ApiGetDepartmentHierarchyByRankId(int? siteId, int? programId, int? rankId, bool? isCategoryActive, bool? isCategoryItemActive)
        {
            int procResult;
            return ApiGetDepartmentHierarchyByRankId(siteId, programId, rankId, isCategoryActive, isCategoryItemActive, out procResult);
        }

        public System.Collections.Generic.List<ApiGetDepartmentHierarchyByRankIdReturnModel> ApiGetDepartmentHierarchyByRankId(int? siteId, int? programId, int? rankId, bool? isCategoryActive, bool? isCategoryItemActive, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetDepartmentHierarchyByRankIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetDepartmentHierarchyByRankIdReturnModel>> ApiGetDepartmentHierarchyByRankIdAsync(int? siteId, int? programId, int? rankId, bool? isCategoryActive, bool? isCategoryItemActive)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetDepartmentHierarchyByRankId(siteId, programId, rankId, isCategoryActive, isCategoryItemActive, out procResult));
        }

        public System.Collections.Generic.List<ApiGetElementsByTagReturnModel> ApiGetElementsByTag(int? programId, string tagCode)
        {
            int procResult;
            return ApiGetElementsByTag(programId, tagCode, out procResult);
        }

        public System.Collections.Generic.List<ApiGetElementsByTagReturnModel> ApiGetElementsByTag(int? programId, string tagCode, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetElementsByTagReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetElementsByTagReturnModel>> ApiGetElementsByTagAsync(int? programId, string tagCode)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetElementsByTag(programId, tagCode, out procResult));
        }

        public System.Collections.Generic.List<ApiGetEPsByStandardReturnModel> ApiGetEPsByStandard(int? userId, int? productType, int? siteId, int? programId, int? standardTextId, System.DateTime? standardEffBeginDate, int? serviceProfileTypeId, int? certificationItemId)
        {
            int procResult;
            return ApiGetEPsByStandard(userId, productType, siteId, programId, standardTextId, standardEffBeginDate, serviceProfileTypeId, certificationItemId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetEPsByStandardReturnModel> ApiGetEPsByStandard(int? userId, int? productType, int? siteId, int? programId, int? standardTextId, System.DateTime? standardEffBeginDate, int? serviceProfileTypeId, int? certificationItemId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetEPsByStandardReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetEPsByStandardReturnModel>> ApiGetEPsByStandardAsync(int? userId, int? productType, int? siteId, int? programId, int? standardTextId, System.DateTime? standardEffBeginDate, int? serviceProfileTypeId, int? certificationItemId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetEPsByStandard(userId, productType, siteId, programId, standardTextId, standardEffBeginDate, serviceProfileTypeId, certificationItemId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetFileStreamIDbyFileDisplayNameReturnModel> ApiGetFileStreamIDbyFileDisplayName(string fileDisplayText)
        {
            int procResult;
            return ApiGetFileStreamIDbyFileDisplayName(fileDisplayText, out procResult);
        }

        public System.Collections.Generic.List<ApiGetFileStreamIDbyFileDisplayNameReturnModel> ApiGetFileStreamIDbyFileDisplayName(string fileDisplayText, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetFileStreamIDbyFileDisplayNameReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetFileStreamIDbyFileDisplayNameReturnModel>> ApiGetFileStreamIDbyFileDisplayNameAsync(string fileDisplayText)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetFileStreamIDbyFileDisplayName(fileDisplayText, out procResult));
        }

        public int ApiGetLabelForUnassigned(out string labelOfTheDay)
        {
            labelOfTheDay = default(string);

            return 0;
        }

        public System.Collections.Generic.List<ApiGetLicenseDetailsForGuestLinkReturnModel> ApiGetLicenseDetailsForGuestLink(int? guestLinkId)
        {
            int procResult;
            return ApiGetLicenseDetailsForGuestLink(guestLinkId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetLicenseDetailsForGuestLinkReturnModel> ApiGetLicenseDetailsForGuestLink(int? guestLinkId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetLicenseDetailsForGuestLinkReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetLicenseDetailsForGuestLinkReturnModel>> ApiGetLicenseDetailsForGuestLinkAsync(int? guestLinkId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetLicenseDetailsForGuestLink(guestLinkId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetMaxTaskAssignedDateReturnModel> ApiGetMaxTaskAssignedDate(string lstTaskIDs)
        {
            int procResult;
            return ApiGetMaxTaskAssignedDate(lstTaskIDs, out procResult);
        }

        public System.Collections.Generic.List<ApiGetMaxTaskAssignedDateReturnModel> ApiGetMaxTaskAssignedDate(string lstTaskIDs, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetMaxTaskAssignedDateReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetMaxTaskAssignedDateReturnModel>> ApiGetMaxTaskAssignedDateAsync(string lstTaskIDs)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetMaxTaskAssignedDate(lstTaskIDs, out procResult));
        }

        public System.Collections.Generic.List<ApiGetMobileTracerHeaderReturnModel> ApiGetMobileTracerHeader(int? tracerCustomId, int? tracerResponseId, int? siteId, int? programId)
        {
            int procResult;
            return ApiGetMobileTracerHeader(tracerCustomId, tracerResponseId, siteId, programId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetMobileTracerHeaderReturnModel> ApiGetMobileTracerHeader(int? tracerCustomId, int? tracerResponseId, int? siteId, int? programId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetMobileTracerHeaderReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetMobileTracerHeaderReturnModel>> ApiGetMobileTracerHeaderAsync(int? tracerCustomId, int? tracerResponseId, int? siteId, int? programId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetMobileTracerHeader(tracerCustomId, tracerResponseId, siteId, programId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetParentDetailsForLockedTracerCategoryReturnModel> ApiGetParentDetailsForLockedTracerCategory(int? tracerCategoryId)
        {
            int procResult;
            return ApiGetParentDetailsForLockedTracerCategory(tracerCategoryId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetParentDetailsForLockedTracerCategoryReturnModel> ApiGetParentDetailsForLockedTracerCategory(int? tracerCategoryId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetParentDetailsForLockedTracerCategoryReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetParentDetailsForLockedTracerCategoryReturnModel>> ApiGetParentDetailsForLockedTracerCategoryAsync(int? tracerCategoryId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetParentDetailsForLockedTracerCategory(tracerCategoryId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetPasswordResetIntervalReturnModel> ApiGetPasswordResetInterval(int? userId)
        {
            int procResult;
            return ApiGetPasswordResetInterval(userId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetPasswordResetIntervalReturnModel> ApiGetPasswordResetInterval(int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetPasswordResetIntervalReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetPasswordResetIntervalReturnModel>> ApiGetPasswordResetIntervalAsync(int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetPasswordResetInterval(userId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetProgramsBySiteReturnModel> ApiGetProgramsBySite(int? siteId)
        {
            int procResult;
            return ApiGetProgramsBySite(siteId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetProgramsBySiteReturnModel> ApiGetProgramsBySite(int? siteId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetProgramsBySiteReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetProgramsBySiteReturnModel>> ApiGetProgramsBySiteAsync(int? siteId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetProgramsBySite(siteId, out procResult));
        }

        public ApiGetQuestionAnswerImagesReturnModel ApiGetQuestionAnswerImages(int? tracerQuestionId, int? tracerResponseId, int? userId)
        {
            int procResult;
            return ApiGetQuestionAnswerImages(tracerQuestionId, tracerResponseId, userId, out procResult);
        }

        public ApiGetQuestionAnswerImagesReturnModel ApiGetQuestionAnswerImages(int? tracerQuestionId, int? tracerResponseId, int? userId, out int procResult)
        {

            procResult = 0;
            return new ApiGetQuestionAnswerImagesReturnModel();
        }

        public System.Threading.Tasks.Task<ApiGetQuestionAnswerImagesReturnModel> ApiGetQuestionAnswerImagesAsync(int? tracerQuestionId, int? tracerResponseId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetQuestionAnswerImages(tracerQuestionId, tracerResponseId, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetSiteEmailNotificationSettingsReturnModel> ApiGetSiteEmailNotificationSettings(int? siteId)
        {
            int procResult;
            return ApiGetSiteEmailNotificationSettings(siteId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetSiteEmailNotificationSettingsReturnModel> ApiGetSiteEmailNotificationSettings(int? siteId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetSiteEmailNotificationSettingsReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetSiteEmailNotificationSettingsReturnModel>> ApiGetSiteEmailNotificationSettingsAsync(int? siteId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetSiteEmailNotificationSettings(siteId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetStandardsByChapterReturnModel> ApiGetStandardsByChapter(string standardEffBeginDate, int? productType, int? programId, int? chapterId, int? siteId, int? userId, int? serviceProfileTypeId, int? certificationItemId)
        {
            int procResult;
            return ApiGetStandardsByChapter(standardEffBeginDate, productType, programId, chapterId, siteId, userId, serviceProfileTypeId, certificationItemId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetStandardsByChapterReturnModel> ApiGetStandardsByChapter(string standardEffBeginDate, int? productType, int? programId, int? chapterId, int? siteId, int? userId, int? serviceProfileTypeId, int? certificationItemId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetStandardsByChapterReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetStandardsByChapterReturnModel>> ApiGetStandardsByChapterAsync(string standardEffBeginDate, int? productType, int? programId, int? chapterId, int? siteId, int? userId, int? serviceProfileTypeId, int? certificationItemId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetStandardsByChapter(standardEffBeginDate, productType, programId, chapterId, siteId, userId, serviceProfileTypeId, certificationItemId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetStdDetailsByTracerQuestionReturnModel> ApiGetStdDetailsByTracerQuestion(int? tracerCustomId, int? tracerResponseId, int? tracerQuestionId, bool? isGuestAccess)
        {
            int procResult;
            return ApiGetStdDetailsByTracerQuestion(tracerCustomId, tracerResponseId, tracerQuestionId, isGuestAccess, out procResult);
        }

        public System.Collections.Generic.List<ApiGetStdDetailsByTracerQuestionReturnModel> ApiGetStdDetailsByTracerQuestion(int? tracerCustomId, int? tracerResponseId, int? tracerQuestionId, bool? isGuestAccess, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetStdDetailsByTracerQuestionReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetStdDetailsByTracerQuestionReturnModel>> ApiGetStdDetailsByTracerQuestionAsync(int? tracerCustomId, int? tracerResponseId, int? tracerQuestionId, bool? isGuestAccess)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetStdDetailsByTracerQuestion(tracerCustomId, tracerResponseId, tracerQuestionId, isGuestAccess, out procResult));
        }

        public System.Collections.Generic.List<ApiGetSystemTracerInfoReturnModel> ApiGetSystemTracerInfo(int? tracerId, int? userId)
        {
            int procResult;
            return ApiGetSystemTracerInfo(tracerId, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetSystemTracerInfoReturnModel> ApiGetSystemTracerInfo(int? tracerId, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetSystemTracerInfoReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetSystemTracerInfoReturnModel>> ApiGetSystemTracerInfoAsync(int? tracerId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetSystemTracerInfo(tracerId, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTagsByCoPReturnModel> ApiGetTagsByCoP(int? programId, string copName)
        {
            int procResult;
            return ApiGetTagsByCoP(programId, copName, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTagsByCoPReturnModel> ApiGetTagsByCoP(int? programId, string copName, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTagsByCoPReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTagsByCoPReturnModel>> ApiGetTagsByCoPAsync(int? programId, string copName)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTagsByCoP(programId, copName, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTargetSitesForCopyReturnModel> ApiGetTargetSitesForCopy(int? tracerCustomId, int? userId)
        {
            int procResult;
            return ApiGetTargetSitesForCopy(tracerCustomId, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTargetSitesForCopyReturnModel> ApiGetTargetSitesForCopy(int? tracerCustomId, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTargetSitesForCopyReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTargetSitesForCopyReturnModel>> ApiGetTargetSitesForCopyAsync(int? tracerCustomId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTargetSitesForCopy(tracerCustomId, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTargetSitesForDeleteReturnModel> ApiGetTargetSitesForDelete(int? tracerCustomId, int? userId)
        {
            int procResult;
            return ApiGetTargetSitesForDelete(tracerCustomId, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTargetSitesForDeleteReturnModel> ApiGetTargetSitesForDelete(int? tracerCustomId, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTargetSitesForDeleteReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTargetSitesForDeleteReturnModel>> ApiGetTargetSitesForDeleteAsync(int? tracerCustomId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTargetSitesForDelete(tracerCustomId, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTaskDetailsReturnModel> ApiGetTaskDetails(int? taskId, System.DateTime? standardEffDate, int? programId)
        {
            int procResult;
            return ApiGetTaskDetails(taskId, standardEffDate, programId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTaskDetailsReturnModel> ApiGetTaskDetails(int? taskId, System.DateTime? standardEffDate, int? programId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTaskDetailsReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTaskDetailsReturnModel>> ApiGetTaskDetailsAsync(int? taskId, System.DateTime? standardEffDate, int? programId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTaskDetails(taskId, standardEffDate, programId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTaskDetailsForSendingEmailReturnModel> ApiGetTaskDetailsForSendingEmail(string taskIDs, int? siteId, int? programId, int? userId, string tracersTaskUrl, bool? skipItemAssociated)
        {
            int procResult;
            return ApiGetTaskDetailsForSendingEmail(taskIDs, siteId, programId, userId, tracersTaskUrl, skipItemAssociated, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTaskDetailsForSendingEmailReturnModel> ApiGetTaskDetailsForSendingEmail(string taskIDs, int? siteId, int? programId, int? userId, string tracersTaskUrl, bool? skipItemAssociated, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTaskDetailsForSendingEmailReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTaskDetailsForSendingEmailReturnModel>> ApiGetTaskDetailsForSendingEmailAsync(string taskIDs, int? siteId, int? programId, int? userId, string tracersTaskUrl, bool? skipItemAssociated)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTaskDetailsForSendingEmail(taskIDs, siteId, programId, userId, tracersTaskUrl, skipItemAssociated, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTaskFollowUpRemainderSettingsReturnModel> ApiGetTaskFollowUpRemainderSettings(int? siteId)
        {
            int procResult;
            return ApiGetTaskFollowUpRemainderSettings(siteId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTaskFollowUpRemainderSettingsReturnModel> ApiGetTaskFollowUpRemainderSettings(int? siteId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTaskFollowUpRemainderSettingsReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTaskFollowUpRemainderSettingsReturnModel>> ApiGetTaskFollowUpRemainderSettingsAsync(int? siteId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTaskFollowUpRemainderSettings(siteId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTaskLinkDetailsReturnModel> ApiGetTaskLinkDetails(System.Guid? taskLinkGuid)
        {
            int procResult;
            return ApiGetTaskLinkDetails(taskLinkGuid, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTaskLinkDetailsReturnModel> ApiGetTaskLinkDetails(System.Guid? taskLinkGuid, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTaskLinkDetailsReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTaskLinkDetailsReturnModel>> ApiGetTaskLinkDetailsAsync(System.Guid? taskLinkGuid)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTaskLinkDetails(taskLinkGuid, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTaskListReturnModel> ApiGetTaskList(string standardEffDate, int? siteId, int? programId, int? assignedToUserId, int? assignedByUserId)
        {
            int procResult;
            return ApiGetTaskList(standardEffDate, siteId, programId, assignedToUserId, assignedByUserId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTaskListReturnModel> ApiGetTaskList(string standardEffDate, int? siteId, int? programId, int? assignedToUserId, int? assignedByUserId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTaskListReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTaskListReturnModel>> ApiGetTaskListAsync(string standardEffDate, int? siteId, int? programId, int? assignedToUserId, int? assignedByUserId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTaskList(standardEffDate, siteId, programId, assignedToUserId, assignedByUserId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTracerByIdReturnModel> ApiGetTracerById(int? tracerCustomId)
        {
            int procResult;
            return ApiGetTracerById(tracerCustomId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTracerByIdReturnModel> ApiGetTracerById(int? tracerCustomId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTracerByIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTracerByIdReturnModel>> ApiGetTracerByIdAsync(int? tracerCustomId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTracerById(tracerCustomId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTracerCategoryBySiteIdReturnModel> ApiGetTracerCategoryBySiteId(int? siteId)
        {
            int procResult;
            return ApiGetTracerCategoryBySiteId(siteId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTracerCategoryBySiteIdReturnModel> ApiGetTracerCategoryBySiteId(int? siteId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTracerCategoryBySiteIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTracerCategoryBySiteIdReturnModel>> ApiGetTracerCategoryBySiteIdAsync(int? siteId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTracerCategoryBySiteId(siteId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTracerCategoryNamesReturnModel> ApiGetTracerCategoryNames(int? siteId, int? programId)
        {
            int procResult;
            return ApiGetTracerCategoryNames(siteId, programId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTracerCategoryNamesReturnModel> ApiGetTracerCategoryNames(int? siteId, int? programId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTracerCategoryNamesReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTracerCategoryNamesReturnModel>> ApiGetTracerCategoryNamesAsync(int? siteId, int? programId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTracerCategoryNames(siteId, programId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTracerHeaderReturnModel> ApiGetTracerHeader(int? tracerCustomId, int? tracerResponseId, int? siteId, int? programId)
        {
            int procResult;
            return ApiGetTracerHeader(tracerCustomId, tracerResponseId, siteId, programId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTracerHeaderReturnModel> ApiGetTracerHeader(int? tracerCustomId, int? tracerResponseId, int? siteId, int? programId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTracerHeaderReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTracerHeaderReturnModel>> ApiGetTracerHeaderAsync(int? tracerCustomId, int? tracerResponseId, int? siteId, int? programId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTracerHeader(tracerCustomId, tracerResponseId, siteId, programId, out procResult));
        }

        public int ApiGetTracerImagesCount(int? tracerResponseId)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiGetTracerImagesTempReturnModel> ApiGetTracerImagesTemp(int? tracerCustomId, int? userId)
        {
            int procResult;
            return ApiGetTracerImagesTemp(tracerCustomId, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTracerImagesTempReturnModel> ApiGetTracerImagesTemp(int? tracerCustomId, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTracerImagesTempReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTracerImagesTempReturnModel>> ApiGetTracerImagesTempAsync(int? tracerCustomId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTracerImagesTemp(tracerCustomId, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTracerQuestionInfoReturnModel> ApiGetTracerQuestionInfo(int? tracerCustomId, int? tracerQuestionId)
        {
            int procResult;
            return ApiGetTracerQuestionInfo(tracerCustomId, tracerQuestionId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTracerQuestionInfoReturnModel> ApiGetTracerQuestionInfo(int? tracerCustomId, int? tracerQuestionId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTracerQuestionInfoReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTracerQuestionInfoReturnModel>> ApiGetTracerQuestionInfoAsync(int? tracerCustomId, int? tracerQuestionId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTracerQuestionInfo(tracerCustomId, tracerQuestionId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTracerQuestionsReturnModel> ApiGetTracerQuestions(int? tracerId)
        {
            int procResult;
            return ApiGetTracerQuestions(tracerId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTracerQuestionsReturnModel> ApiGetTracerQuestions(int? tracerId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTracerQuestionsReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTracerQuestionsReturnModel>> ApiGetTracerQuestionsAsync(int? tracerId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTracerQuestions(tracerId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTracersThatCanBeCopiedReturnModel> ApiGetTracersThatCanBeCopied(int? siteId, int? programId, int? userId)
        {
            int procResult;
            return ApiGetTracersThatCanBeCopied(siteId, programId, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTracersThatCanBeCopiedReturnModel> ApiGetTracersThatCanBeCopied(int? siteId, int? programId, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTracersThatCanBeCopiedReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTracersThatCanBeCopiedReturnModel>> ApiGetTracersThatCanBeCopiedAsync(int? siteId, int? programId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTracersThatCanBeCopied(siteId, programId, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetTracersThatCanBeDeletedReturnModel> ApiGetTracersThatCanBeDeleted(int? siteId, int? programId, int? userId)
        {
            int procResult;
            return ApiGetTracersThatCanBeDeleted(siteId, programId, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetTracersThatCanBeDeletedReturnModel> ApiGetTracersThatCanBeDeleted(int? siteId, int? programId, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetTracersThatCanBeDeletedReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTracersThatCanBeDeletedReturnModel>> ApiGetTracersThatCanBeDeletedAsync(int? siteId, int? programId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetTracersThatCanBeDeleted(siteId, programId, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetUserPreferenceReturnModel> ApiGetUserPreference(int? userId, int? siteId, int? programId, string userPreferenceType)
        {
            int procResult;
            return ApiGetUserPreference(userId, siteId, programId, userPreferenceType, out procResult);
        }

        public System.Collections.Generic.List<ApiGetUserPreferenceReturnModel> ApiGetUserPreference(int? userId, int? siteId, int? programId, string userPreferenceType, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetUserPreferenceReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetUserPreferenceReturnModel>> ApiGetUserPreferenceAsync(int? userId, int? siteId, int? programId, string userPreferenceType)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetUserPreference(userId, siteId, programId, userPreferenceType, out procResult));
        }

        public System.Collections.Generic.List<ApiGetUserRoleBySiteReturnModel> ApiGetUserRoleBySite(int? userId, int? siteId)
        {
            int procResult;
            return ApiGetUserRoleBySite(userId, siteId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetUserRoleBySiteReturnModel> ApiGetUserRoleBySite(int? userId, int? siteId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetUserRoleBySiteReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetUserRoleBySiteReturnModel>> ApiGetUserRoleBySiteAsync(int? userId, int? siteId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetUserRoleBySite(userId, siteId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetUsersReturnModel> ApiGetUsers(string lstUserIDs)
        {
            int procResult;
            return ApiGetUsers(lstUserIDs, out procResult);
        }

        public System.Collections.Generic.List<ApiGetUsersReturnModel> ApiGetUsers(string lstUserIDs, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetUsersReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetUsersReturnModel>> ApiGetUsersAsync(string lstUserIDs)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetUsers(lstUserIDs, out procResult));
        }

        public System.Collections.Generic.List<ApiGetUsersDetailsReturnModel> ApiGetUsersDetails(string lstUserIDs, int? siteId)
        {
            int procResult;
            return ApiGetUsersDetails(lstUserIDs, siteId, out procResult);
        }

        public System.Collections.Generic.List<ApiGetUsersDetailsReturnModel> ApiGetUsersDetails(string lstUserIDs, int? siteId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetUsersDetailsReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetUsersDetailsReturnModel>> ApiGetUsersDetailsAsync(string lstUserIDs, int? siteId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetUsersDetails(lstUserIDs, siteId, out procResult));
        }

        public System.Collections.Generic.List<ApiGetUserSecurityAttributesReturnModel> ApiGetUserSecurityAttributes(int? userId, int? codeCategoryId, int? questionTyeId1, int? questionTyeId2)
        {
            int procResult;
            return ApiGetUserSecurityAttributes(userId, codeCategoryId, questionTyeId1, questionTyeId2, out procResult);
        }

        public System.Collections.Generic.List<ApiGetUserSecurityAttributesReturnModel> ApiGetUserSecurityAttributes(int? userId, int? codeCategoryId, int? questionTyeId1, int? questionTyeId2, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetUserSecurityAttributesReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetUserSecurityAttributesReturnModel>> ApiGetUserSecurityAttributesAsync(int? userId, int? codeCategoryId, int? questionTyeId1, int? questionTyeId2)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetUserSecurityAttributes(userId, codeCategoryId, questionTyeId1, questionTyeId2, out procResult));
        }

        public System.Collections.Generic.List<ApiGetUsersForAssignmentReturnModel> ApiGetUsersForAssignment(string searchString, string siteList)
        {
            int procResult;
            return ApiGetUsersForAssignment(searchString, siteList, out procResult);
        }

        public System.Collections.Generic.List<ApiGetUsersForAssignmentReturnModel> ApiGetUsersForAssignment(string searchString, string siteList, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGetUsersForAssignmentReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetUsersForAssignmentReturnModel>> ApiGetUsersForAssignmentAsync(string searchString, string siteList)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGetUsersForAssignment(searchString, siteList, out procResult));
        }

        public int ApiGuestAccessSetupSave(int? siteId, bool? guestAccessFlag, bool? domainRestrictionFlag, string domainNames, int? userId)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiGuestLinkReadReturnModel> ApiGuestLinkRead(int? siteId, int? tracerCustomId, int? programId, System.Guid? guestLinkGuid, int? guestLinkId)
        {
            int procResult;
            return ApiGuestLinkRead(siteId, tracerCustomId, programId, guestLinkGuid, guestLinkId, out procResult);
        }

        public System.Collections.Generic.List<ApiGuestLinkReadReturnModel> ApiGuestLinkRead(int? siteId, int? tracerCustomId, int? programId, System.Guid? guestLinkGuid, int? guestLinkId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGuestLinkReadReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGuestLinkReadReturnModel>> ApiGuestLinkReadAsync(int? siteId, int? tracerCustomId, int? programId, System.Guid? guestLinkGuid, int? guestLinkId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGuestLinkRead(siteId, tracerCustomId, programId, guestLinkGuid, guestLinkId, out procResult));
        }

        public System.Collections.Generic.List<ApiGuestUserTracerDetailSelectBySiteProgramReturnModel> ApiGuestUserTracerDetailSelectBySiteProgram(int? userId, int? siteId, int? programId, int? statusId)
        {
            int procResult;
            return ApiGuestUserTracerDetailSelectBySiteProgram(userId, siteId, programId, statusId, out procResult);
        }

        public System.Collections.Generic.List<ApiGuestUserTracerDetailSelectBySiteProgramReturnModel> ApiGuestUserTracerDetailSelectBySiteProgram(int? userId, int? siteId, int? programId, int? statusId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiGuestUserTracerDetailSelectBySiteProgramReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGuestUserTracerDetailSelectBySiteProgramReturnModel>> ApiGuestUserTracerDetailSelectBySiteProgramAsync(int? userId, int? siteId, int? programId, int? statusId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiGuestUserTracerDetailSelectBySiteProgram(userId, siteId, programId, statusId, out procResult));
        }

        public int ApiInsertGuestLinkAccessed(int? userId, System.Guid? guestLinkGuid)
        {

            return 0;
        }

        public int ApiInsertQuestionImageMap(int? tracerQuestionId, int? tracerResponseId, string tempImageIDs, int? userId)
        {

            return 0;
        }

        public int ApiInsertTracerTempImage(int? siteId, int? programId, int? tracerCustomId, int? tracerQuestionId, string imageName, int? userId)
        {

            return 0;
        }

        public int ApiLogicallyDeleteObservation(int? tracerResponseId, int? updatedById)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiMenuStateGetReturnModel> ApiMenuStateGet(int? userId)
        {
            int procResult;
            return ApiMenuStateGet(userId, out procResult);
        }

        public System.Collections.Generic.List<ApiMenuStateGetReturnModel> ApiMenuStateGet(int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMenuStateGetReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMenuStateGetReturnModel>> ApiMenuStateGetAsync(int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMenuStateGet(userId, out procResult));
        }

        public int ApiMenuStateInit(int? userId, int? siteId, int? roleId, bool? accessToEdition, bool? accessToAmp, bool? accessToTracers, bool? accessToEramp, bool? accessToErTracers)
        {

            return 0;
        }

        public int ApiMenuStateInitLocalDebug(int? userId)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiMenuStateProductsBySiteReturnModel> ApiMenuStateProductsBySite(string userLogonId)
        {
            int procResult;
            return ApiMenuStateProductsBySite(userLogonId, out procResult);
        }

        public System.Collections.Generic.List<ApiMenuStateProductsBySiteReturnModel> ApiMenuStateProductsBySite(string userLogonId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMenuStateProductsBySiteReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMenuStateProductsBySiteReturnModel>> ApiMenuStateProductsBySiteAsync(string userLogonId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMenuStateProductsBySite(userLogonId, out procResult));
        }

        public System.Collections.Generic.List<ApiMenuStateProductsBySiteAndProgramReturnModel> ApiMenuStateProductsBySiteAndProgram(int? userId)
        {
            int procResult;
            return ApiMenuStateProductsBySiteAndProgram(userId, out procResult);
        }

        public System.Collections.Generic.List<ApiMenuStateProductsBySiteAndProgramReturnModel> ApiMenuStateProductsBySiteAndProgram(int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMenuStateProductsBySiteAndProgramReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMenuStateProductsBySiteAndProgramReturnModel>> ApiMenuStateProductsBySiteAndProgramAsync(int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMenuStateProductsBySiteAndProgram(userId, out procResult));
        }

        public int ApiMenuStateSave(int? userId, int? siteId, int? userRoleId, int? programId, int? certificationItemId, bool? isCurrentCycle, string cycleEffectiveDate, string mockSurveyTitle, bool? accessToEdition, bool? accessToAmp, bool? accessToTracers, bool? accessToEramp, bool? accessToErTracers, bool? accessToCms, bool? accessToMockSurvey, bool? userIsMultiSiteAdmin)
        {

            return 0;
        }

        public int ApiMenuStateSaveArg(int? userId, string key, string value)
        {

            return 0;
        }

        public int ApiMenuStateSiteProgramDropdowns(int? userId)
        {

            return 0;
        }

        public int ApiMenuStateUpdate(int? userId)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiMobileGetObservationDetailsByIdReturnModel> ApiMobileGetObservationDetailsById(int? tracerCustomId, int? tracerResponseId, bool? isGuestAccess)
        {
            int procResult;
            return ApiMobileGetObservationDetailsById(tracerCustomId, tracerResponseId, isGuestAccess, out procResult);
        }

        public System.Collections.Generic.List<ApiMobileGetObservationDetailsByIdReturnModel> ApiMobileGetObservationDetailsById(int? tracerCustomId, int? tracerResponseId, bool? isGuestAccess, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMobileGetObservationDetailsByIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMobileGetObservationDetailsByIdReturnModel>> ApiMobileGetObservationDetailsByIdAsync(int? tracerCustomId, int? tracerResponseId, bool? isGuestAccess)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMobileGetObservationDetailsById(tracerCustomId, tracerResponseId, isGuestAccess, out procResult));
        }

        public System.Collections.Generic.List<ApiMobileGetObservationDetailsByIdWithValidationMessageReturnModel> ApiMobileGetObservationDetailsByIdWithValidationMessage(int? tracerCustomId, int? tracerResponseId, bool? isGuestAccess)
        {
            int procResult;
            return ApiMobileGetObservationDetailsByIdWithValidationMessage(tracerCustomId, tracerResponseId, isGuestAccess, out procResult);
        }

        public System.Collections.Generic.List<ApiMobileGetObservationDetailsByIdWithValidationMessageReturnModel> ApiMobileGetObservationDetailsByIdWithValidationMessage(int? tracerCustomId, int? tracerResponseId, bool? isGuestAccess, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMobileGetObservationDetailsByIdWithValidationMessageReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMobileGetObservationDetailsByIdWithValidationMessageReturnModel>> ApiMobileGetObservationDetailsByIdWithValidationMessageAsync(int? tracerCustomId, int? tracerResponseId, bool? isGuestAccess)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMobileGetObservationDetailsByIdWithValidationMessage(tracerCustomId, tracerResponseId, isGuestAccess, out procResult));
        }

        public System.Collections.Generic.List<ApiMobileGuestUserSelectProgramsBySiteReturnModel> ApiMobileGuestUserSelectProgramsBySite(int? userId, int? siteId, int? productId)
        {
            int procResult;
            return ApiMobileGuestUserSelectProgramsBySite(userId, siteId, productId, out procResult);
        }

        public System.Collections.Generic.List<ApiMobileGuestUserSelectProgramsBySiteReturnModel> ApiMobileGuestUserSelectProgramsBySite(int? userId, int? siteId, int? productId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMobileGuestUserSelectProgramsBySiteReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMobileGuestUserSelectProgramsBySiteReturnModel>> ApiMobileGuestUserSelectProgramsBySiteAsync(int? userId, int? siteId, int? productId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMobileGuestUserSelectProgramsBySite(userId, siteId, productId, out procResult));
        }

        public System.Collections.Generic.List<ApiMobileGuestUserSelectSitesReturnModel> ApiMobileGuestUserSelectSites(int? userId, int? productId)
        {
            int procResult;
            return ApiMobileGuestUserSelectSites(userId, productId, out procResult);
        }

        public System.Collections.Generic.List<ApiMobileGuestUserSelectSitesReturnModel> ApiMobileGuestUserSelectSites(int? userId, int? productId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMobileGuestUserSelectSitesReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMobileGuestUserSelectSitesReturnModel>> ApiMobileGuestUserSelectSitesAsync(int? userId, int? productId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMobileGuestUserSelectSites(userId, productId, out procResult));
        }

        public System.Collections.Generic.List<ApiMobileResponsesSelectByTracerIdReturnModel> ApiMobileResponsesSelectByTracerId(int? tracerId, string responseStatusCsv)
        {
            int procResult;
            return ApiMobileResponsesSelectByTracerId(tracerId, responseStatusCsv, out procResult);
        }

        public System.Collections.Generic.List<ApiMobileResponsesSelectByTracerIdReturnModel> ApiMobileResponsesSelectByTracerId(int? tracerId, string responseStatusCsv, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMobileResponsesSelectByTracerIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMobileResponsesSelectByTracerIdReturnModel>> ApiMobileResponsesSelectByTracerIdAsync(int? tracerId, string responseStatusCsv)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMobileResponsesSelectByTracerId(tracerId, responseStatusCsv, out procResult));
        }

        public System.Collections.Generic.List<ApiMobileSaveTracerResponseReturnModel> ApiMobileSaveTracerResponse(int? tracerId, int? observationId, string title, System.DateTime? observationDate, string medicalStaffInvolved, string staffInterviewed, int? observationsCount, string surveyTeam, string departmentId, string location, int? observationStatusId, int? tracerErrorValue, string note, int? userId, string medicalRecordNumber, string equipmentObserved, string contractedService, bool? isCalledByGuestAccess)
        {
            int procResult;
            return ApiMobileSaveTracerResponse(tracerId, observationId, title, observationDate, medicalStaffInvolved, staffInterviewed, observationsCount, surveyTeam, departmentId, location, observationStatusId, tracerErrorValue, note, userId, medicalRecordNumber, equipmentObserved, contractedService, isCalledByGuestAccess, out procResult);
        }

        public System.Collections.Generic.List<ApiMobileSaveTracerResponseReturnModel> ApiMobileSaveTracerResponse(int? tracerId, int? observationId, string title, System.DateTime? observationDate, string medicalStaffInvolved, string staffInterviewed, int? observationsCount, string surveyTeam, string departmentId, string location, int? observationStatusId, int? tracerErrorValue, string note, int? userId, string medicalRecordNumber, string equipmentObserved, string contractedService, bool? isCalledByGuestAccess, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMobileSaveTracerResponseReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMobileSaveTracerResponseReturnModel>> ApiMobileSaveTracerResponseAsync(int? tracerId, int? observationId, string title, System.DateTime? observationDate, string medicalStaffInvolved, string staffInterviewed, int? observationsCount, string surveyTeam, string departmentId, string location, int? observationStatusId, int? tracerErrorValue, string note, int? userId, string medicalRecordNumber, string equipmentObserved, string contractedService, bool? isCalledByGuestAccess)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMobileSaveTracerResponse(tracerId, observationId, title, observationDate, medicalStaffInvolved, staffInterviewed, observationsCount, surveyTeam, departmentId, location, observationStatusId, tracerErrorValue, note, userId, medicalRecordNumber, equipmentObserved, contractedService, isCalledByGuestAccess, out procResult));
        }

        public System.Collections.Generic.List<ApiMobileTracerGetQuestionDetailReturnModel> ApiMobileTracerGetQuestionDetail(int? tracerCustomId, int? tracerQuestionId, int? tracerResponseId, int? userId)
        {
            int procResult;
            return ApiMobileTracerGetQuestionDetail(tracerCustomId, tracerQuestionId, tracerResponseId, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiMobileTracerGetQuestionDetailReturnModel> ApiMobileTracerGetQuestionDetail(int? tracerCustomId, int? tracerQuestionId, int? tracerResponseId, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMobileTracerGetQuestionDetailReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMobileTracerGetQuestionDetailReturnModel>> ApiMobileTracerGetQuestionDetailAsync(int? tracerCustomId, int? tracerQuestionId, int? tracerResponseId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMobileTracerGetQuestionDetail(tracerCustomId, tracerQuestionId, tracerResponseId, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiMobileUpdateTracerQuestionAnswerReturnModel> ApiMobileUpdateTracerQuestionAnswer(int? observationId, int? userId, int? tracerQuestionId, int? tracerQuestionAnswerId, decimal? numerator, decimal? denominator, int? questionAnswer, int? questionNoteId, string questionNote)
        {
            int procResult;
            return ApiMobileUpdateTracerQuestionAnswer(observationId, userId, tracerQuestionId, tracerQuestionAnswerId, numerator, denominator, questionAnswer, questionNoteId, questionNote, out procResult);
        }

        public System.Collections.Generic.List<ApiMobileUpdateTracerQuestionAnswerReturnModel> ApiMobileUpdateTracerQuestionAnswer(int? observationId, int? userId, int? tracerQuestionId, int? tracerQuestionAnswerId, decimal? numerator, decimal? denominator, int? questionAnswer, int? questionNoteId, string questionNote, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMobileUpdateTracerQuestionAnswerReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMobileUpdateTracerQuestionAnswerReturnModel>> ApiMobileUpdateTracerQuestionAnswerAsync(int? observationId, int? userId, int? tracerQuestionId, int? tracerQuestionAnswerId, decimal? numerator, decimal? denominator, int? questionAnswer, int? questionNoteId, string questionNote)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMobileUpdateTracerQuestionAnswer(observationId, userId, tracerQuestionId, tracerQuestionAnswerId, numerator, denominator, questionAnswer, questionNoteId, questionNote, out procResult));
        }

        public int ApiMobileUpdateTracerResponseStatus(int? tracerResponseId, int? tracerResponseStatusId)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiMobileValidateGuestUserReturnModel> ApiMobileValidateGuestUser(string userLogin, int? siteId)
        {
            int procResult;
            return ApiMobileValidateGuestUser(userLogin, siteId, out procResult);
        }

        public System.Collections.Generic.List<ApiMobileValidateGuestUserReturnModel> ApiMobileValidateGuestUser(string userLogin, int? siteId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMobileValidateGuestUserReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMobileValidateGuestUserReturnModel>> ApiMobileValidateGuestUserAsync(string userLogin, int? siteId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMobileValidateGuestUser(userLogin, siteId, out procResult));
        }

        public System.Collections.Generic.List<ApiMobileValidateTracerGuestUserReturnModel> ApiMobileValidateTracerGuestUser(string userLogin)
        {
            int procResult;
            return ApiMobileValidateTracerGuestUser(userLogin, out procResult);
        }

        public System.Collections.Generic.List<ApiMobileValidateTracerGuestUserReturnModel> ApiMobileValidateTracerGuestUser(string userLogin, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMobileValidateTracerGuestUserReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMobileValidateTracerGuestUserReturnModel>> ApiMobileValidateTracerGuestUserAsync(string userLogin)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMobileValidateTracerGuestUser(userLogin, out procResult));
        }

        public System.Collections.Generic.List<ApiMsGetAllCorpSettingsByUserIdReturnModel> ApiMsGetAllCorpSettingsByUserId(int? userId)
        {
            int procResult;
            return ApiMsGetAllCorpSettingsByUserId(userId, out procResult);
        }

        public System.Collections.Generic.List<ApiMsGetAllCorpSettingsByUserIdReturnModel> ApiMsGetAllCorpSettingsByUserId(int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMsGetAllCorpSettingsByUserIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMsGetAllCorpSettingsByUserIdReturnModel>> ApiMsGetAllCorpSettingsByUserIdAsync(int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMsGetAllCorpSettingsByUserId(userId, out procResult));
        }

        public System.Collections.Generic.List<ApiMsGetWorkFlowsReturnModel> ApiMsGetWorkFlows()
        {
            int procResult;
            return ApiMsGetWorkFlows(out procResult);
        }

        public System.Collections.Generic.List<ApiMsGetWorkFlowsReturnModel> ApiMsGetWorkFlows(out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMsGetWorkFlowsReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMsGetWorkFlowsReturnModel>> ApiMsGetWorkFlowsAsync()
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMsGetWorkFlows(out procResult));
        }

        public int ApiMsUpdateWorkFlow(int? mockSurveyWorkFlowId, int? userId, string siteIDs)
        {

            return 0;
        }

        public int ApiMultisiteAuditInsert(int? tracerCustomId, int? siteId, int? userId, string msg)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiMultisiteCopyReturnModel> ApiMultisiteCopy(string selectedSites, int? tracerId, bool? isLocked, int? userId)
        {
            int procResult;
            return ApiMultisiteCopy(selectedSites, tracerId, isLocked, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiMultisiteCopyReturnModel> ApiMultisiteCopy(string selectedSites, int? tracerId, bool? isLocked, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMultisiteCopyReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMultisiteCopyReturnModel>> ApiMultisiteCopyAsync(string selectedSites, int? tracerId, bool? isLocked, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMultisiteCopy(selectedSites, tracerId, isLocked, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiMultisiteDeleteReturnModel> ApiMultisiteDelete(string sites, int? tracerId, int? userId)
        {
            int procResult;
            return ApiMultisiteDelete(sites, tracerId, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiMultisiteDeleteReturnModel> ApiMultisiteDelete(string sites, int? tracerId, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMultisiteDeleteReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMultisiteDeleteReturnModel>> ApiMultisiteDeleteAsync(string sites, int? tracerId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMultisiteDelete(sites, tracerId, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiMultiSiteFindDifferencesReturnModel> ApiMultiSiteFindDifferences(int? parentId, int? childId, int? userId, bool? lockOnExactMatch)
        {
            int procResult;
            return ApiMultiSiteFindDifferences(parentId, childId, userId, lockOnExactMatch, out procResult);
        }

        public System.Collections.Generic.List<ApiMultiSiteFindDifferencesReturnModel> ApiMultiSiteFindDifferences(int? parentId, int? childId, int? userId, bool? lockOnExactMatch, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiMultiSiteFindDifferencesReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiMultiSiteFindDifferencesReturnModel>> ApiMultiSiteFindDifferencesAsync(int? parentId, int? childId, int? userId, bool? lockOnExactMatch)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiMultiSiteFindDifferences(parentId, childId, userId, lockOnExactMatch, out procResult));
        }

        public int ApiOptOutOfSystemTracers(int? tracerId, int? userId)
        {

            return 0;
        }

        public int ApiPublishTracer(int? tracerId, int? updatedById)
        {

            return 0;
        }

        public int ApiReAssignTask(string lstTaskIDs, int? assignedToUserId, string ccUserIDs, string dueDate, int? updatedByUserId)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiReportTracerObservationReturnModel> ApiReportTracerObservation(string customTracerIdFilter, out int? customSections)
        {
            int procResult;
            return ApiReportTracerObservation(customTracerIdFilter, out customSections, out procResult);
        }

        public System.Collections.Generic.List<ApiReportTracerObservationReturnModel> ApiReportTracerObservation(string customTracerIdFilter, out int? customSections, out int procResult)
        {
            customSections = default(int);

            procResult = 0;
            return new System.Collections.Generic.List<ApiReportTracerObservationReturnModel>();
        }

        public ApiReportTracerObservationDetailReturnModel ApiReportTracerObservationDetail(int? tracerResponseId, int? programId, int? cycleId, int? isErrorOnly, out int? customSections)
        {
            int procResult;
            return ApiReportTracerObservationDetail(tracerResponseId, programId, cycleId, isErrorOnly, out customSections, out procResult);
        }

        public ApiReportTracerObservationDetailReturnModel ApiReportTracerObservationDetail(int? tracerResponseId, int? programId, int? cycleId, int? isErrorOnly, out int? customSections, out int procResult)
        {
            customSections = default(int);

            procResult = 0;
            return new ApiReportTracerObservationDetailReturnModel();
        }

        public System.Collections.Generic.List<ApiReportTracerObservationHeaderReturnModel> ApiReportTracerObservationHeader(int? tracerResponseId, int? siteId, int? programId)
        {
            int procResult;
            return ApiReportTracerObservationHeader(tracerResponseId, siteId, programId, out procResult);
        }

        public System.Collections.Generic.List<ApiReportTracerObservationHeaderReturnModel> ApiReportTracerObservationHeader(int? tracerResponseId, int? siteId, int? programId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiReportTracerObservationHeaderReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiReportTracerObservationHeaderReturnModel>> ApiReportTracerObservationHeaderAsync(int? tracerResponseId, int? siteId, int? programId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiReportTracerObservationHeader(tracerResponseId, siteId, programId, out procResult));
        }

        public System.Collections.Generic.List<ApiResponsesSelectByTracerIdReturnModel> ApiResponsesSelectByTracerId(int? tracerId, string responseStatusCsv)
        {
            int procResult;
            return ApiResponsesSelectByTracerId(tracerId, responseStatusCsv, out procResult);
        }

        public System.Collections.Generic.List<ApiResponsesSelectByTracerIdReturnModel> ApiResponsesSelectByTracerId(int? tracerId, string responseStatusCsv, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiResponsesSelectByTracerIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiResponsesSelectByTracerIdReturnModel>> ApiResponsesSelectByTracerIdAsync(int? tracerId, string responseStatusCsv)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiResponsesSelectByTracerId(tracerId, responseStatusCsv, out procResult));
        }

        public int ApiSaveSiteProgramPreference(int? userId, int? siteId, int? programId)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiSaveTracerCategoryReturnModel> ApiSaveTracerCategory(int? tracerCategoryId, string tracerCategoryName, int? siteId, int? updatedById, bool? skipParentCategorySave)
        {
            int procResult;
            return ApiSaveTracerCategory(tracerCategoryId, tracerCategoryName, siteId, updatedById, skipParentCategorySave, out procResult);
        }

        public System.Collections.Generic.List<ApiSaveTracerCategoryReturnModel> ApiSaveTracerCategory(int? tracerCategoryId, string tracerCategoryName, int? siteId, int? updatedById, bool? skipParentCategorySave, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiSaveTracerCategoryReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSaveTracerCategoryReturnModel>> ApiSaveTracerCategoryAsync(int? tracerCategoryId, string tracerCategoryName, int? siteId, int? updatedById, bool? skipParentCategorySave)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiSaveTracerCategory(tracerCategoryId, tracerCategoryName, siteId, updatedById, skipParentCategorySave, out procResult));
        }

        public System.Collections.Generic.List<ApiSelectGuestAccessDomainBySiteReturnModel> ApiSelectGuestAccessDomainBySite(int? siteId)
        {
            int procResult;
            return ApiSelectGuestAccessDomainBySite(siteId, out procResult);
        }

        public System.Collections.Generic.List<ApiSelectGuestAccessDomainBySiteReturnModel> ApiSelectGuestAccessDomainBySite(int? siteId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiSelectGuestAccessDomainBySiteReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSelectGuestAccessDomainBySiteReturnModel>> ApiSelectGuestAccessDomainBySiteAsync(int? siteId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiSelectGuestAccessDomainBySite(siteId, out procResult));
        }

        public System.Collections.Generic.List<ApiSelectGuestAccessSettingsBySiteReturnModel> ApiSelectGuestAccessSettingsBySite(int? siteId)
        {
            int procResult;
            return ApiSelectGuestAccessSettingsBySite(siteId, out procResult);
        }

        public System.Collections.Generic.List<ApiSelectGuestAccessSettingsBySiteReturnModel> ApiSelectGuestAccessSettingsBySite(int? siteId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiSelectGuestAccessSettingsBySiteReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSelectGuestAccessSettingsBySiteReturnModel>> ApiSelectGuestAccessSettingsBySiteAsync(int? siteId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiSelectGuestAccessSettingsBySite(siteId, out procResult));
        }

        public System.Collections.Generic.List<ApiSelectProgramsBySiteReturnModel> ApiSelectProgramsBySite(int? userId, int? siteId, System.DateTime? standardEffBeginDate, int? productId)
        {
            int procResult;
            return ApiSelectProgramsBySite(userId, siteId, standardEffBeginDate, productId, out procResult);
        }

        public System.Collections.Generic.List<ApiSelectProgramsBySiteReturnModel> ApiSelectProgramsBySite(int? userId, int? siteId, System.DateTime? standardEffBeginDate, int? productId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiSelectProgramsBySiteReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSelectProgramsBySiteReturnModel>> ApiSelectProgramsBySiteAsync(int? userId, int? siteId, System.DateTime? standardEffBeginDate, int? productId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiSelectProgramsBySite(userId, siteId, standardEffBeginDate, productId, out procResult));
        }

        public System.Collections.Generic.List<ApiSelectProgramsBySiteUserReturnModel> ApiSelectProgramsBySiteUser(int? siteId, System.DateTime? standardEffBeginDate, int? productId)
        {
            int procResult;
            return ApiSelectProgramsBySiteUser(siteId, standardEffBeginDate, productId, out procResult);
        }

        public System.Collections.Generic.List<ApiSelectProgramsBySiteUserReturnModel> ApiSelectProgramsBySiteUser(int? siteId, System.DateTime? standardEffBeginDate, int? productId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiSelectProgramsBySiteUserReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSelectProgramsBySiteUserReturnModel>> ApiSelectProgramsBySiteUserAsync(int? siteId, System.DateTime? standardEffBeginDate, int? productId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiSelectProgramsBySiteUser(siteId, standardEffBeginDate, productId, out procResult));
        }

        public System.Collections.Generic.List<ApiSelectSiteAttributeMapReturnModel> ApiSelectSiteAttributeMap(int? siteId, string attributeList)
        {
            int procResult;
            return ApiSelectSiteAttributeMap(siteId, attributeList, out procResult);
        }

        public System.Collections.Generic.List<ApiSelectSiteAttributeMapReturnModel> ApiSelectSiteAttributeMap(int? siteId, string attributeList, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiSelectSiteAttributeMapReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSelectSiteAttributeMapReturnModel>> ApiSelectSiteAttributeMapAsync(int? siteId, string attributeList)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiSelectSiteAttributeMap(siteId, attributeList, out procResult));
        }

        public System.Collections.Generic.List<ApiSelectTracerSiteByTracerCustomIdReturnModel> ApiSelectTracerSiteByTracerCustomId(int? tracerCustomId)
        {
            int procResult;
            return ApiSelectTracerSiteByTracerCustomId(tracerCustomId, out procResult);
        }

        public System.Collections.Generic.List<ApiSelectTracerSiteByTracerCustomIdReturnModel> ApiSelectTracerSiteByTracerCustomId(int? tracerCustomId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiSelectTracerSiteByTracerCustomIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSelectTracerSiteByTracerCustomIdReturnModel>> ApiSelectTracerSiteByTracerCustomIdAsync(int? tracerCustomId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiSelectTracerSiteByTracerCustomId(tracerCustomId, out procResult));
        }

        public System.Collections.Generic.List<ApiSelectUserByUserLogonIdReturnModel> ApiSelectUserByUserLogonId(string userLogonId)
        {
            int procResult;
            return ApiSelectUserByUserLogonId(userLogonId, out procResult);
        }

        public System.Collections.Generic.List<ApiSelectUserByUserLogonIdReturnModel> ApiSelectUserByUserLogonId(string userLogonId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiSelectUserByUserLogonIdReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSelectUserByUserLogonIdReturnModel>> ApiSelectUserByUserLogonIdAsync(string userLogonId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiSelectUserByUserLogonId(userLogonId, out procResult));
        }

        public System.Collections.Generic.List<ApiSetDefaultTracerCategoryForSiteReturnModel> ApiSetDefaultTracerCategoryForSite(int? tracerCategoryId, int? siteId, int? updatedById)
        {
            int procResult;
            return ApiSetDefaultTracerCategoryForSite(tracerCategoryId, siteId, updatedById, out procResult);
        }

        public System.Collections.Generic.List<ApiSetDefaultTracerCategoryForSiteReturnModel> ApiSetDefaultTracerCategoryForSite(int? tracerCategoryId, int? siteId, int? updatedById, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiSetDefaultTracerCategoryForSiteReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSetDefaultTracerCategoryForSiteReturnModel>> ApiSetDefaultTracerCategoryForSiteAsync(int? tracerCategoryId, int? siteId, int? updatedById)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiSetDefaultTracerCategoryForSite(tracerCategoryId, siteId, updatedById, out procResult));
        }

        public System.Collections.Generic.List<ApiSitesNoLongerAuthorizedToAccessReturnModel> ApiSitesNoLongerAuthorizedToAccess(int? tracerId, int? userId)
        {
            int procResult;
            return ApiSitesNoLongerAuthorizedToAccess(tracerId, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiSitesNoLongerAuthorizedToAccessReturnModel> ApiSitesNoLongerAuthorizedToAccess(int? tracerId, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiSitesNoLongerAuthorizedToAccessReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSitesNoLongerAuthorizedToAccessReturnModel>> ApiSitesNoLongerAuthorizedToAccessAsync(int? tracerId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiSitesNoLongerAuthorizedToAccess(tracerId, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiTracerDetailSelectBySiteProgramStatusReturnModel> ApiTracerDetailSelectBySiteProgramStatus(int? siteId, int? programId, int? statusId)
        {
            int procResult;
            return ApiTracerDetailSelectBySiteProgramStatus(siteId, programId, statusId, out procResult);
        }

        public System.Collections.Generic.List<ApiTracerDetailSelectBySiteProgramStatusReturnModel> ApiTracerDetailSelectBySiteProgramStatus(int? siteId, int? programId, int? statusId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiTracerDetailSelectBySiteProgramStatusReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiTracerDetailSelectBySiteProgramStatusReturnModel>> ApiTracerDetailSelectBySiteProgramStatusAsync(int? siteId, int? programId, int? statusId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiTracerDetailSelectBySiteProgramStatus(siteId, programId, statusId, out procResult));
        }

        public System.Collections.Generic.List<ApiTracersBySiteProgramStatusReturnModel> ApiTracersBySiteProgramStatus(int? siteId, int? programId, int? statusId, int? userId)
        {
            int procResult;
            return ApiTracersBySiteProgramStatus(siteId, programId, statusId, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiTracersBySiteProgramStatusReturnModel> ApiTracersBySiteProgramStatus(int? siteId, int? programId, int? statusId, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiTracersBySiteProgramStatusReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiTracersBySiteProgramStatusReturnModel>> ApiTracersBySiteProgramStatusAsync(int? siteId, int? programId, int? statusId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiTracersBySiteProgramStatus(siteId, programId, statusId, userId, out procResult));
        }

        public System.Collections.Generic.List<ApiUnlockedMasterValidationReturnModel> ApiUnlockedMasterValidation(int? tracerId, int? userId)
        {
            int procResult;
            return ApiUnlockedMasterValidation(tracerId, userId, out procResult);
        }

        public System.Collections.Generic.List<ApiUnlockedMasterValidationReturnModel> ApiUnlockedMasterValidation(int? tracerId, int? userId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiUnlockedMasterValidationReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiUnlockedMasterValidationReturnModel>> ApiUnlockedMasterValidationAsync(int? tracerId, int? userId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiUnlockedMasterValidation(tracerId, userId, out procResult));
        }

        public int ApiUnpublishTracer(int? tracerId, int? updatedById)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiUpdateSelectPasscodeReturnModel> ApiUpdateSelectPasscode(int? userId, int? createdByUserId, int? passcode)
        {
            int procResult;
            return ApiUpdateSelectPasscode(userId, createdByUserId, passcode, out procResult);
        }

        public System.Collections.Generic.List<ApiUpdateSelectPasscodeReturnModel> ApiUpdateSelectPasscode(int? userId, int? createdByUserId, int? passcode, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiUpdateSelectPasscodeReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiUpdateSelectPasscodeReturnModel>> ApiUpdateSelectPasscodeAsync(int? userId, int? createdByUserId, int? passcode)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiUpdateSelectPasscode(userId, createdByUserId, passcode, out procResult));
        }

        public int ApiUpdateSiteEmailNotificationSettings(int? siteId, bool? sendEmailOnTaskCreation, bool? sendEmailBeforeTaskDue, int? daysBeforeTaskDue, bool? sendEmailsAfterTaskDue, int? daysAfterTaskDue, bool? sendRemainderEmailAfterTaskDue, bool? sendTaskReportToCc, int? taskReportToCcScheduleTypeId, bool? sendTaskReportToUsers, int? taskReportToUsersScheduleTypeId, string taskReportRecipients, bool? sendEmailOnAssigningEp, int? taskDueRecipientType, int? updatedByUserId)
        {

            return 0;
        }

        public int ApiUpdateTaskObservationAssoc(int? tracerResponseId, string taskIDs)
        {

            return 0;
        }

        public int ApiUpdateTracerCategoryForTracer(int? tracerCategoryId, int? tracerCustomId, int? updatedById)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiUpdateTracerQuestionAnswerReturnModel> ApiUpdateTracerQuestionAnswer(int? tracerQuestionId, int? tracerResponseId, int? userId, string questionNote, string questionNoteId)
        {
            int procResult;
            return ApiUpdateTracerQuestionAnswer(tracerQuestionId, tracerResponseId, userId, questionNote, questionNoteId, out procResult);
        }

        public System.Collections.Generic.List<ApiUpdateTracerQuestionAnswerReturnModel> ApiUpdateTracerQuestionAnswer(int? tracerQuestionId, int? tracerResponseId, int? userId, string questionNote, string questionNoteId, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiUpdateTracerQuestionAnswerReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiUpdateTracerQuestionAnswerReturnModel>> ApiUpdateTracerQuestionAnswerAsync(int? tracerQuestionId, int? tracerResponseId, int? userId, string questionNote, string questionNoteId)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiUpdateTracerQuestionAnswer(tracerQuestionId, tracerResponseId, userId, questionNote, questionNoteId, out procResult));
        }

        public int ApiUpdateTracerStatusHistory(int? tracerCustomId, int? tracerStatusId, int? userId)
        {

            return 0;
        }

        public int ApiUpdateUserPreference(int? userId, int? siteId, int? programId, string userPreferenceType, string preferenceValue)
        {

            return 0;
        }

        public System.Collections.Generic.List<ApiUpdateUserTaskReturnModel> ApiUpdateUserTask(int? taskId, string taskName, int? taskTypeId, int? siteId, int? programId, string assignedDate, int? assignedToUserId, int? assignedByUserId, string taskDetails, string ccUserIDs, string dueDate, int? taskStatus, int? updatedByUserId, int? createdByUserId, int? tracerCustomId, int? tracerResponseId, int? tracerQuestionId, int? tracerQuestionAnswerId, int? epTextId, int? cmsStandardId, bool? reminderEmailRequired, string taskResolution, string completeDate, string lstUsers)
        {
            int procResult;
            return ApiUpdateUserTask(taskId, taskName, taskTypeId, siteId, programId, assignedDate, assignedToUserId, assignedByUserId, taskDetails, ccUserIDs, dueDate, taskStatus, updatedByUserId, createdByUserId, tracerCustomId, tracerResponseId, tracerQuestionId, tracerQuestionAnswerId, epTextId, cmsStandardId, reminderEmailRequired, taskResolution, completeDate, lstUsers, out procResult);
        }

        public System.Collections.Generic.List<ApiUpdateUserTaskReturnModel> ApiUpdateUserTask(int? taskId, string taskName, int? taskTypeId, int? siteId, int? programId, string assignedDate, int? assignedToUserId, int? assignedByUserId, string taskDetails, string ccUserIDs, string dueDate, int? taskStatus, int? updatedByUserId, int? createdByUserId, int? tracerCustomId, int? tracerResponseId, int? tracerQuestionId, int? tracerQuestionAnswerId, int? epTextId, int? cmsStandardId, bool? reminderEmailRequired, string taskResolution, string completeDate, string lstUsers, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<ApiUpdateUserTaskReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<ApiUpdateUserTaskReturnModel>> ApiUpdateUserTaskAsync(int? taskId, string taskName, int? taskTypeId, int? siteId, int? programId, string assignedDate, int? assignedToUserId, int? assignedByUserId, string taskDetails, string ccUserIDs, string dueDate, int? taskStatus, int? updatedByUserId, int? createdByUserId, int? tracerCustomId, int? tracerResponseId, int? tracerQuestionId, int? tracerQuestionAnswerId, int? epTextId, int? cmsStandardId, bool? reminderEmailRequired, string taskResolution, string completeDate, string lstUsers)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(ApiUpdateUserTask(taskId, taskName, taskTypeId, siteId, programId, assignedDate, assignedToUserId, assignedByUserId, taskDetails, ccUserIDs, dueDate, taskStatus, updatedByUserId, createdByUserId, tracerCustomId, tracerResponseId, tracerQuestionId, tracerQuestionAnswerId, epTextId, cmsStandardId, reminderEmailRequired, taskResolution, completeDate, lstUsers, out procResult));
        }

    }
}
// </auto-generated>
