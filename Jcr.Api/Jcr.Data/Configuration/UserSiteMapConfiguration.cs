// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Jcr.Data
{
    using Jcr.Data;

    // UserSiteMap
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.30.0.0")]
    public partial class UserSiteMapConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UserSiteMap>
    {
        public UserSiteMapConfiguration()
            : this("dbo")
        {
        }

        public UserSiteMapConfiguration(string schema)
        {
            ToTable("UserSiteMap", schema);
            HasKey(x => new { x.UserId, x.SiteId });

            Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SiteId).HasColumnName(@"SiteId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RoleId).HasColumnName(@"RoleID").HasColumnType("int").IsRequired();
            Property(x => x.DefaultSite).HasColumnName(@"DefaultSite").HasColumnType("bit").IsRequired();
            Property(x => x.AmpAccess).HasColumnName(@"AMPAccess").HasColumnType("bit").IsRequired();
            Property(x => x.TracersAccess).HasColumnName(@"TracersAccess").HasColumnType("bit").IsOptional();
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsOptional();
            Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Site).WithMany(b => b.UserSiteMaps).HasForeignKey(c => c.SiteId).WillCascadeOnDelete(false); // FK_UserSiteMap_Site
            HasRequired(a => a.User).WithMany(b => b.UserSiteMaps).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_UserSiteMap_User
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
