// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Jcr.Data
{
    using Jcr.Data;

    public interface IDBFileTableContext : System.IDisposable
    {

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();

        // Stored Procedures
        System.Collections.Generic.List<UsmCcmInsertFileReturnModel> UsmCcmInsertFile(string fileName, byte[] fileData, string appCode);
        System.Collections.Generic.List<UsmCcmInsertFileReturnModel> UsmCcmInsertFile(string fileName, byte[] fileData, string appCode, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<UsmCcmInsertFileReturnModel>> UsmCcmInsertFileAsync(string fileName, byte[] fileData, string appCode);

        int UsmMsDeleteFile(System.Guid? fileStreamId);
        // UsmMsDeleteFileAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        System.Collections.Generic.List<UsmMsInsertFileReturnModel> UsmMsInsertFile(string filename, byte[] filedata);
        System.Collections.Generic.List<UsmMsInsertFileReturnModel> UsmMsInsertFile(string filename, byte[] filedata, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<UsmMsInsertFileReturnModel>> UsmMsInsertFileAsync(string filename, byte[] filedata);

        System.Collections.Generic.List<UsmMsRetrieveFileReturnModel> UsmMsRetrieveFile(System.Guid? fileStreamId);
        System.Collections.Generic.List<UsmMsRetrieveFileReturnModel> UsmMsRetrieveFile(System.Guid? fileStreamId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<UsmMsRetrieveFileReturnModel>> UsmMsRetrieveFileAsync(System.Guid? fileStreamId);

    }

}
// </auto-generated>
