// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Jcr.Data
{
    using Jcr.Data;

    public interface IDBAMPContext : System.IDisposable
    {
        System.Data.Entity.DbSet<ActionType> ActionTypes { get; set; } // ActionType
        System.Data.Entity.DbSet<Site> Sites { get; set; } // Site
        System.Data.Entity.DbSet<Token> Tokens { get; set; } // Token
        System.Data.Entity.DbSet<User> Users { get; set; } // User
        System.Data.Entity.DbSet<UserSecurityAttribute> UserSecurityAttributes { get; set; } // UserSecurityAttribute
        System.Data.Entity.DbSet<UserSiteMap> UserSiteMaps { get; set; } // UserSiteMap

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();

        // Stored Procedures
        int ApiAddAppEventLogDetail(int? programId, int? siteId, int? actionTaken, int? userId, int? eProductId);
        // ApiAddAppEventLogDetailAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        ApiAddUserSecurityAttributeReturnModel ApiAddUserSecurityAttribute(int? userId, int? attributeTypeId, string attributeValue, System.DateTime? attributeActivationDate, System.DateTime? attributeExpirationDate);
        System.Threading.Tasks.Task<ApiAddUserSecurityAttributeReturnModel> ApiAddUserSecurityAttributeAsync(int? userId, int? attributeTypeId, string attributeValue, System.DateTime? attributeActivationDate, System.DateTime? attributeExpirationDate);

        System.Collections.Generic.List<ApiCheckUserLoginFirstAfterProductReleaseReturnModel> ApiCheckUserLoginFirstAfterProductRelease(int? eProductId, int? userId, System.DateTime? releaseDate);
        System.Collections.Generic.List<ApiCheckUserLoginFirstAfterProductReleaseReturnModel> ApiCheckUserLoginFirstAfterProductRelease(int? eProductId, int? userId, System.DateTime? releaseDate, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiCheckUserLoginFirstAfterProductReleaseReturnModel>> ApiCheckUserLoginFirstAfterProductReleaseAsync(int? eProductId, int? userId, System.DateTime? releaseDate);

        ApiCodeSelectByIdReturnModel ApiCodeSelectById(int? codeCategoryId, int? parentId);
        System.Threading.Tasks.Task<ApiCodeSelectByIdReturnModel> ApiCodeSelectByIdAsync(int? codeCategoryId, int? parentId);

        ApiConfigurationSelectReturnModel ApiConfigurationSelect(int? configurationId);
        System.Threading.Tasks.Task<ApiConfigurationSelectReturnModel> ApiConfigurationSelectAsync(int? configurationId);

        ApiCreateTracersGuestUserReturnModel ApiCreateTracersGuestUser(string userLogonId, string firstName, string lastName, int? siteId, int? roleId);
        System.Threading.Tasks.Task<ApiCreateTracersGuestUserReturnModel> ApiCreateTracersGuestUserAsync(string userLogonId, string firstName, string lastName, int? siteId, int? roleId);

        int ApiExceptionLogInsert(string exceptionText, string pageName, string methodName, int? userId, int? siteId, string transSql, string httpReferrer, out int? exceptionLogId);
        // ApiExceptionLogInsertAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        System.Collections.Generic.List<ApiGetAllUserSitesReturnModel> ApiGetAllUserSites(int? userId);
        System.Collections.Generic.List<ApiGetAllUserSitesReturnModel> ApiGetAllUserSites(int? userId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetAllUserSitesReturnModel>> ApiGetAllUserSitesAsync(int? userId);

        System.Collections.Generic.List<ApiGetEmailListBySiteListReturnModel> ApiGetEmailListBySiteList(string search, string siteList);
        System.Collections.Generic.List<ApiGetEmailListBySiteListReturnModel> ApiGetEmailListBySiteList(string search, string siteList, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetEmailListBySiteListReturnModel>> ApiGetEmailListBySiteListAsync(string search, string siteList);

        System.Collections.Generic.List<ApiGetEulaStatusReturnModel> ApiGetEulaStatus(int? userId);
        System.Collections.Generic.List<ApiGetEulaStatusReturnModel> ApiGetEulaStatus(int? userId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetEulaStatusReturnModel>> ApiGetEulaStatusAsync(int? userId);

        ApiGetSiteFullNameReturnModel ApiGetSiteFullName(int? siteId);
        System.Threading.Tasks.Task<ApiGetSiteFullNameReturnModel> ApiGetSiteFullNameAsync(int? siteId);

        System.Collections.Generic.List<ApiGetTokenbyUserIdReturnModel> ApiGetTokenbyUserId(int? userId);
        System.Collections.Generic.List<ApiGetTokenbyUserIdReturnModel> ApiGetTokenbyUserId(int? userId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetTokenbyUserIdReturnModel>> ApiGetTokenbyUserIdAsync(int? userId);

        ApiGetUserByUserLogonIdReturnModel ApiGetUserByUserLogonId(string userLogonId);
        System.Threading.Tasks.Task<ApiGetUserByUserLogonIdReturnModel> ApiGetUserByUserLogonIdAsync(string userLogonId);

        System.Collections.Generic.List<ApiGetUserDefaultSiteIdReturnModel> ApiGetUserDefaultSiteId(int? userId);
        System.Collections.Generic.List<ApiGetUserDefaultSiteIdReturnModel> ApiGetUserDefaultSiteId(int? userId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetUserDefaultSiteIdReturnModel>> ApiGetUserDefaultSiteIdAsync(int? userId);

        System.Collections.Generic.List<ApiGetUserPasswordReturnModel> ApiGetUserPassword(int? userId);
        System.Collections.Generic.List<ApiGetUserPasswordReturnModel> ApiGetUserPassword(int? userId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetUserPasswordReturnModel>> ApiGetUserPasswordAsync(int? userId);

        System.Collections.Generic.List<ApiGetUserSecurityQuestionsReturnModel> ApiGetUserSecurityQuestions(int? userId, int? codeCategoryId, int? questionTyeId1, int? questionTyeId2);
        System.Collections.Generic.List<ApiGetUserSecurityQuestionsReturnModel> ApiGetUserSecurityQuestions(int? userId, int? codeCategoryId, int? questionTyeId1, int? questionTyeId2, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiGetUserSecurityQuestionsReturnModel>> ApiGetUserSecurityQuestionsAsync(int? userId, int? codeCategoryId, int? questionTyeId1, int? questionTyeId2);

        int ApiInsertCustomerSupport(int? userId, int? siteId, int? hcoid, System.DateTime? requestTime, string requestSubject, string requestBody, int? eProductId, int? programId);
        // ApiInsertCustomerSupportAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        ApiIsFeatureEnabledReturnModel ApiIsFeatureEnabled(int? siteId, int? featureId);
        System.Threading.Tasks.Task<ApiIsFeatureEnabledReturnModel> ApiIsFeatureEnabledAsync(int? siteId, int? featureId);

        int ApiLogTracerActionSummaryByMonth(int? programId, int? siteId, int? actionTaken, int? userId);
        // ApiLogTracerActionSummaryByMonthAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        ApiSelectSecurityQuestionsByIdReturnModel ApiSelectSecurityQuestionsById(int? id);
        System.Threading.Tasks.Task<ApiSelectSecurityQuestionsByIdReturnModel> ApiSelectSecurityQuestionsByIdAsync(int? id);

        System.Collections.Generic.List<ApiSelectTracerProgramsBySiteUserReturnModel> ApiSelectTracerProgramsBySiteUser(int? siteId, int? userId, int? cycleId);
        System.Collections.Generic.List<ApiSelectTracerProgramsBySiteUserReturnModel> ApiSelectTracerProgramsBySiteUser(int? siteId, int? userId, int? cycleId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSelectTracerProgramsBySiteUserReturnModel>> ApiSelectTracerProgramsBySiteUserAsync(int? siteId, int? userId, int? cycleId);

        System.Collections.Generic.List<ApiSelectTracerSitesByUserReturnModel> ApiSelectTracerSitesByUser(int? userId, int? siteId, bool? filteredsites, bool? isGuestUser);
        System.Collections.Generic.List<ApiSelectTracerSitesByUserReturnModel> ApiSelectTracerSitesByUser(int? userId, int? siteId, bool? filteredsites, bool? isGuestUser, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSelectTracerSitesByUserReturnModel>> ApiSelectTracerSitesByUserAsync(int? userId, int? siteId, bool? filteredsites, bool? isGuestUser);

        System.Collections.Generic.List<ApiSelectUserIdByUserLogonIdReturnModel> ApiSelectUserIdByUserLogonId(string userLogonId);
        System.Collections.Generic.List<ApiSelectUserIdByUserLogonIdReturnModel> ApiSelectUserIdByUserLogonId(string userLogonId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSelectUserIdByUserLogonIdReturnModel>> ApiSelectUserIdByUserLogonIdAsync(string userLogonId);

        System.Collections.Generic.List<ApiSiteSelectByUserIdReturnModel> ApiSiteSelectByUserId(int? userId);
        System.Collections.Generic.List<ApiSiteSelectByUserIdReturnModel> ApiSiteSelectByUserId(int? userId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiSiteSelectByUserIdReturnModel>> ApiSiteSelectByUserIdAsync(int? userId);

        int ApiTempPasswordActivate(int? userId);
        // ApiTempPasswordActivateAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int ApiTempPasswordInactivate(int? userId);
        // ApiTempPasswordInactivateAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        System.Collections.Generic.List<ApiTempPasswordValidationReturnModel> ApiTempPasswordValidation(int? userId, string tempPassword);
        System.Collections.Generic.List<ApiTempPasswordValidationReturnModel> ApiTempPasswordValidation(int? userId, string tempPassword, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiTempPasswordValidationReturnModel>> ApiTempPasswordValidationAsync(int? userId, string tempPassword);

        int ApiTokenDelete(int? userId, string authToken);
        // ApiTokenDeleteAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int ApiTokenInsert(int? userId, string authToken, System.DateTime? issuedOn, System.DateTime? expiresOn);
        // ApiTokenInsertAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int ApiTokenUpdate(int? userId, string authToken, System.DateTime? expiresOn);
        // ApiTokenUpdateAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        System.Collections.Generic.List<ApiTracerValidateUserWithNoPasswordReturnModel> ApiTracerValidateUserWithNoPassword(string userLogonId);
        System.Collections.Generic.List<ApiTracerValidateUserWithNoPasswordReturnModel> ApiTracerValidateUserWithNoPassword(string userLogonId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiTracerValidateUserWithNoPasswordReturnModel>> ApiTracerValidateUserWithNoPasswordAsync(string userLogonId);

        int ApiUserSecurityAttributeUpdate(int? userId, int? attributeTypeId, string attributeValue, System.DateTime? attributeActivationDate, System.DateTime? attributeExpirationDate);
        // ApiUserSecurityAttributeUpdateAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int ApiUserSecurityAttributeUpdateByParent(int? userId, int? attributeTypeId, string attributeValue, System.DateTime? attributeActivationDate, System.DateTime? attributeExpirationDate, int? codeCategoryId, int? parentCodeId);
        // ApiUserSecurityAttributeUpdateByParentAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        System.Collections.Generic.List<ApiValidateInactiveEMailIdsReturnModel> ApiValidateInactiveEMailIds(string lstUserEmailIDs);
        System.Collections.Generic.List<ApiValidateInactiveEMailIdsReturnModel> ApiValidateInactiveEMailIds(string lstUserEmailIDs, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiValidateInactiveEMailIdsReturnModel>> ApiValidateInactiveEMailIdsAsync(string lstUserEmailIDs);

        ApiValidateSecurityQuestionAnswerReturnModel ApiValidateSecurityQuestionAnswer(int? userId, int? questionId, string answer);
        System.Threading.Tasks.Task<ApiValidateSecurityQuestionAnswerReturnModel> ApiValidateSecurityQuestionAnswerAsync(int? userId, int? questionId, string answer);

        System.Collections.Generic.List<ApiValidateUserReturnModel> ApiValidateUser(string userLogin, string userPass, int? subscriptionTypeId);
        System.Collections.Generic.List<ApiValidateUserReturnModel> ApiValidateUser(string userLogin, string userPass, int? subscriptionTypeId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ApiValidateUserReturnModel>> ApiValidateUserAsync(string userLogin, string userPass, int? subscriptionTypeId);

        ApiVerifyUserByUserLogonIdReturnModel ApiVerifyUserByUserLogonId(string userLogonId, int? siteId);
        System.Threading.Tasks.Task<ApiVerifyUserByUserLogonIdReturnModel> ApiVerifyUserByUserLogonIdAsync(string userLogonId, int? siteId);

        UspSiteSelectReturnModel UspSiteSelect(int? siteId);
        System.Threading.Tasks.Task<UspSiteSelectReturnModel> UspSiteSelectAsync(int? siteId);

    }

}
// </auto-generated>
